basePath: /
definitions:
  models.Billing:
    properties:
      amount:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      payer_id:
        type: integer
      receiver_id:
        type: integer
    type: object
  models.User:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  request.CreateUserInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  request.PaymentInput:
    properties:
      amount:
        example: 50
        type: integer
      billing_id:
        example: 2
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API simples para registro de pagamentos entre usuários.
  title: Me Pague API
  version: "1.0"
paths:
  /billing:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do pagador
        in: query
        name: payer_id
        required: true
        type: string
      - description: ID do recebedor
        in: query
        name: receiver_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Billing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Obtém ou cria uma cobrança entre dois usuários
      tags:
      - Cobranças
  /payment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do pagamento
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/request.PaymentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/request.PaymentInput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Registra um novo pagamento e atualiza o saldo
      tags:
      - Pagamentos
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/request.CreateUserInput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Cria um novo usuário
      tags:
      - Usuários
  /user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Obtém um usuário pelo ID
      tags:
      - Usuários
swagger: "2.0"
